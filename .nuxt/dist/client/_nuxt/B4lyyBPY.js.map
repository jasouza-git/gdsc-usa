{"version":3,"file":"B4lyyBPY.js","sources":["../../../../node_modules/nuxt/dist/app/composables/asyncData.js","../../../../components/Deck.vue"],"sourcesContent":["import { computed, getCurrentInstance, getCurrentScope, onBeforeMount, onScopeDispose, onServerPrefetch, onUnmounted, ref, shallowRef, toRef, unref, watch } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { toArray } from \"../utils.js\";\nimport { createError } from \"./error.js\";\nimport { onNuxtReady } from \"./ready.js\";\nimport { asyncDataDefaults, resetAsyncDataToUndefined } from \"#build/nuxt.config.mjs\";\nconst isDefer = (dedupe) => dedupe === \"defer\" || dedupe === false;\nexport function useAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  let [key, _handler, options = {}] = args;\n  if (typeof key !== \"string\") {\n    throw new TypeError(\"[nuxt] [asyncData] key must be a string.\");\n  }\n  if (typeof _handler !== \"function\") {\n    throw new TypeError(\"[nuxt] [asyncData] handler must be a function.\");\n  }\n  const nuxtApp = useNuxtApp();\n  const handler = import.meta.client || !import.meta.prerender || !nuxtApp.ssrContext?._sharedPrerenderCache ? _handler : () => {\n    const value = nuxtApp.ssrContext._sharedPrerenderCache.get(key);\n    if (value) {\n      return value;\n    }\n    const promise = Promise.resolve().then(() => nuxtApp.runWithContext(_handler));\n    nuxtApp.ssrContext._sharedPrerenderCache.set(key, promise);\n    return promise;\n  };\n  const getDefault = () => asyncDataDefaults.value;\n  const getDefaultCachedData = () => nuxtApp.isHydrating ? nuxtApp.payload.data[key] : nuxtApp.static.data[key];\n  options.server = options.server ?? true;\n  options.default = options.default ?? getDefault;\n  options.getCachedData = options.getCachedData ?? getDefaultCachedData;\n  options.lazy = options.lazy ?? false;\n  options.immediate = options.immediate ?? true;\n  options.deep = options.deep ?? asyncDataDefaults.deep;\n  options.dedupe = options.dedupe ?? \"cancel\";\n  if (import.meta.dev && typeof options.dedupe === \"boolean\") {\n    console.warn(\"[nuxt] `boolean` values are deprecated for the `dedupe` option of `useAsyncData` and will be removed in the future. Use 'cancel' or 'defer' instead.\");\n  }\n  const initialCachedData = options.getCachedData(key, nuxtApp);\n  const hasCachedData = initialCachedData != null;\n  if (!nuxtApp._asyncData[key] || !options.immediate) {\n    nuxtApp.payload._errors[key] ??= asyncDataDefaults.errorValue;\n    const _ref = options.deep ? ref : shallowRef;\n    nuxtApp._asyncData[key] = {\n      data: _ref(hasCachedData ? initialCachedData : options.default()),\n      pending: ref(!hasCachedData),\n      error: toRef(nuxtApp.payload._errors, key),\n      status: ref(\"idle\"),\n      _default: options.default\n    };\n  }\n  const asyncData = { ...nuxtApp._asyncData[key] };\n  delete asyncData._default;\n  asyncData.refresh = asyncData.execute = (opts = {}) => {\n    if (nuxtApp._asyncDataPromises[key]) {\n      if (isDefer(opts.dedupe ?? options.dedupe)) {\n        return nuxtApp._asyncDataPromises[key];\n      }\n      nuxtApp._asyncDataPromises[key].cancelled = true;\n    }\n    if (opts._initial || nuxtApp.isHydrating && opts._initial !== false) {\n      const cachedData = opts._initial ? initialCachedData : options.getCachedData(key, nuxtApp);\n      if (cachedData != null) {\n        return Promise.resolve(cachedData);\n      }\n    }\n    asyncData.pending.value = true;\n    asyncData.status.value = \"pending\";\n    const promise = new Promise(\n      (resolve, reject) => {\n        try {\n          resolve(handler(nuxtApp));\n        } catch (err) {\n          reject(err);\n        }\n      }\n    ).then(async (_result) => {\n      if (promise.cancelled) {\n        return nuxtApp._asyncDataPromises[key];\n      }\n      let result = _result;\n      if (options.transform) {\n        result = await options.transform(_result);\n      }\n      if (options.pick) {\n        result = pick(result, options.pick);\n      }\n      if (import.meta.dev && import.meta.server && typeof result === \"undefined\") {\n        console.warn(`[nuxt] \\`${options._functionName || \"useAsyncData\"}\\` must return a value (it should not be \\`undefined\\`) or the request may be duplicated on the client side.`);\n      }\n      nuxtApp.payload.data[key] = result;\n      asyncData.data.value = result;\n      asyncData.error.value = asyncDataDefaults.errorValue;\n      asyncData.status.value = \"success\";\n    }).catch((error) => {\n      if (promise.cancelled) {\n        return nuxtApp._asyncDataPromises[key];\n      }\n      asyncData.error.value = createError(error);\n      asyncData.data.value = unref(options.default());\n      asyncData.status.value = \"error\";\n    }).finally(() => {\n      if (promise.cancelled) {\n        return;\n      }\n      asyncData.pending.value = false;\n      delete nuxtApp._asyncDataPromises[key];\n    });\n    nuxtApp._asyncDataPromises[key] = promise;\n    return nuxtApp._asyncDataPromises[key];\n  };\n  asyncData.clear = () => clearNuxtDataByKey(nuxtApp, key);\n  const initialFetch = () => asyncData.refresh({ _initial: true });\n  const fetchOnServer = options.server !== false && nuxtApp.payload.serverRendered;\n  if (import.meta.server && fetchOnServer && options.immediate) {\n    const promise = initialFetch();\n    if (getCurrentInstance()) {\n      onServerPrefetch(() => promise);\n    } else {\n      nuxtApp.hook(\"app:created\", async () => {\n        await promise;\n      });\n    }\n  }\n  if (import.meta.client) {\n    const instance = getCurrentInstance();\n    if (import.meta.dev && !nuxtApp.isHydrating && !nuxtApp._processingMiddleware && (!instance || instance?.isMounted)) {\n      console.warn(`[nuxt] [${options._functionName || \"useAsyncData\"}] Component is already mounted, please use $fetch instead. See https://nuxt.com/docs/getting-started/data-fetching`);\n    }\n    if (instance && !instance._nuxtOnBeforeMountCbs) {\n      instance._nuxtOnBeforeMountCbs = [];\n      const cbs = instance._nuxtOnBeforeMountCbs;\n      onBeforeMount(() => {\n        cbs.forEach((cb) => {\n          cb();\n        });\n        cbs.splice(0, cbs.length);\n      });\n      onUnmounted(() => cbs.splice(0, cbs.length));\n    }\n    if (fetchOnServer && nuxtApp.isHydrating && (asyncData.error.value || initialCachedData != null)) {\n      asyncData.pending.value = false;\n      asyncData.status.value = asyncData.error.value ? \"error\" : \"success\";\n    } else if (instance && (nuxtApp.payload.serverRendered && nuxtApp.isHydrating || options.lazy) && options.immediate) {\n      instance._nuxtOnBeforeMountCbs.push(initialFetch);\n    } else if (options.immediate) {\n      initialFetch();\n    }\n    const hasScope = getCurrentScope();\n    if (options.watch) {\n      const unsub = watch(options.watch, () => asyncData.refresh());\n      if (hasScope) {\n        onScopeDispose(unsub);\n      }\n    }\n    const off = nuxtApp.hook(\"app:data:refresh\", async (keys) => {\n      if (!keys || keys.includes(key)) {\n        await asyncData.refresh();\n      }\n    });\n    if (hasScope) {\n      onScopeDispose(off);\n    }\n  }\n  const asyncDataPromise = Promise.resolve(nuxtApp._asyncDataPromises[key]).then(() => asyncData);\n  Object.assign(asyncDataPromise, asyncData);\n  return asyncDataPromise;\n}\nexport function useLazyAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  const [key, handler, options = {}] = args;\n  if (import.meta.dev && import.meta.client) {\n    options._functionName ||= \"useLazyAsyncData\";\n  }\n  return useAsyncData(key, handler, { ...options, lazy: true }, null);\n}\nexport function useNuxtData(key) {\n  const nuxtApp = useNuxtApp();\n  if (!(key in nuxtApp.payload.data)) {\n    nuxtApp.payload.data[key] = asyncDataDefaults.value;\n  }\n  return {\n    data: computed({\n      get() {\n        return nuxtApp._asyncData[key]?.data.value ?? nuxtApp.payload.data[key];\n      },\n      set(value) {\n        if (nuxtApp._asyncData[key]) {\n          nuxtApp._asyncData[key].data.value = value;\n        } else {\n          nuxtApp.payload.data[key] = value;\n        }\n      }\n    })\n  };\n}\nexport async function refreshNuxtData(keys) {\n  if (import.meta.server) {\n    return Promise.resolve();\n  }\n  await new Promise((resolve) => onNuxtReady(resolve));\n  const _keys = keys ? toArray(keys) : void 0;\n  await useNuxtApp().hooks.callHookParallel(\"app:data:refresh\", _keys);\n}\nexport function clearNuxtData(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.data);\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : toArray(keys);\n  for (const key of _keys) {\n    clearNuxtDataByKey(nuxtApp, key);\n  }\n}\nfunction clearNuxtDataByKey(nuxtApp, key) {\n  if (key in nuxtApp.payload.data) {\n    nuxtApp.payload.data[key] = void 0;\n  }\n  if (key in nuxtApp.payload._errors) {\n    nuxtApp.payload._errors[key] = asyncDataDefaults.errorValue;\n  }\n  if (nuxtApp._asyncData[key]) {\n    nuxtApp._asyncData[key].data.value = resetAsyncDataToUndefined ? void 0 : nuxtApp._asyncData[key]._default();\n    nuxtApp._asyncData[key].error.value = asyncDataDefaults.errorValue;\n    nuxtApp._asyncData[key].pending.value = false;\n    nuxtApp._asyncData[key].status.value = \"idle\";\n  }\n  if (key in nuxtApp._asyncDataPromises) {\n    if (nuxtApp._asyncDataPromises[key]) {\n      nuxtApp._asyncDataPromises[key].cancelled = true;\n    }\n    nuxtApp._asyncDataPromises[key] = void 0;\n  }\n}\nfunction pick(obj, keys) {\n  const newObj = {};\n  for (const key of keys) {\n    newObj[key] = obj[key];\n  }\n  return newObj;\n}\n","<script setup lang=\"ts\">\n\nimport type { Member } from '~/components/Member'\nimport { alterColors, ColorAdjustParas, randomColor } from './ColorFunctions';\nimport { useDisplay } from 'vuetify';\n\nconst colorLightenLvl = 4\nvar cardColors = alterColors(ColorAdjustParas.lighten, colorLightenLvl)\n\ntype PositionGroup = {\n    position: string,\n    member: Member[]\n}\n\nconst yearLvl = defineModel<string>(\"yearLvl\")\n\nconst fetchDatas = async (year: string): Promise<PositionGroup[]> => {\n    loading.value = true\n    loadingColors.value = randomLoadingColor()\n    await sleep(2000)\n    loading.value = false\n    return [\n        {\n            position: \"Lead\",\n            member: [\n                {\n                    name: year,\n                    position: \"Lead\",\n                    avatar: null,\n                    color: \"bg-blue\",\n                    summary: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n                    fbLink: \"https://www.facebook.com/chenlin.wang.16100/\",\n                    lnLink: \"https://www.facebook.com/chenlin.wang.16100/\",\n                    itLink: \"https://www.facebook.com/chenlin.wang.16100/\"\n                },\n            ]\n        }, {\n            position: \"Co-Lead\",\n            member: [\n                {\n                    name: year,\n                    position: \"Co-Lead\",\n                    avatar: null,\n                    color: \"bg-blue\",\n                    summary: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n                    fbLink: \"https://www.facebook.com/chenlin.wang.16100/\",\n                    lnLink: \"https://www.facebook.com/chenlin.wang.16100/\",\n                    itLink: \"https://www.facebook.com/chenlin.wang.16100/\"\n                },\n            ]\n        }, {\n            position: \"Asst. Executive Secretary\",\n            member: [\n                {\n                    name: year,\n                    position: \"Asst. Executive Secretary\",\n                    avatar: null,\n                    color: \"bg-blue\",\n                    summary: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n                    fbLink: \"https://www.facebook.com/chenlin.wang.16100/\",\n                    lnLink: \"https://www.facebook.com/chenlin.wang.16100/\",\n                    itLink: \"https://www.facebook.com/chenlin.wang.16100/\"\n                }, {\n                    name: \"Member Name\",\n                    position: \"Asst. Executive Secretary\",\n                    avatar: null,\n                    color: \"bg-red\",\n                    summary: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n                    fbLink: \"https://www.facebook.com/chenlin.wang.16100/\",\n                    lnLink: \"https://www.facebook.com/chenlin.wang.16100/\",\n                }, {\n                    name: year,\n                    position: \"Asst. Executive Secretary\",\n                    avatar: null,\n                    color: \"bg-blue\",\n                    summary: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n                    fbLink: \"https://www.facebook.com/chenlin.wang.16100/\",\n                    lnLink: \"https://www.facebook.com/chenlin.wang.16100/\",\n                    itLink: \"https://www.facebook.com/chenlin.wang.16100/\"\n                }, {\n                    name: \"Member Name\",\n                    position: \"Asst. Executive Secretary\",\n                    avatar: null,\n                    color: \"bg-red\",\n                    summary: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n                    fbLink: \"https://www.facebook.com/chenlin.wang.16100/\",\n                    lnLink: \"https://www.facebook.com/chenlin.wang.16100/\",\n                },\n            ]\n        }\n    ]\n}\n\nconst randomLoadingColor = (): string[] => {\n    return [0, 1, 2, 3, 4, 5].map(i => {\n        const res = randomColor(cardColors)\n        if (res.remainingColors.length === 0) { cardColors = alterColors(ColorAdjustParas.lighten, colorLightenLvl) }\n        else { cardColors = res.remainingColors }\n        return res.color\n    })\n    \n}\n\nconst datas = ref<PositionGroup[]>([])\nconst loading = ref(true)\nconst { data: loadingColors} = await useAsyncData('makeLoadingColors', async () => randomLoadingColor())\nconst { data: years } = await useAsyncData('fetchYearLabels', async () => ['2019 - 2020', '2020 - 2021', '2021 - 2022', '2022 - 2023', '2023 - 2024'])\n\nonMounted(() => {\n    yearLvlChanged(yearLvl.value)\n})\n\nconst yearLvlChanged = (yearL?: string) => {\n    if (yearL) fetchDatas(yearL)\n        .then(res => {\n            datas.value = res\n        })\n}\n\nconst sleep = (ms: number) => new Promise((r) => setTimeout(r, ms));\n\nconst isSmallScreen = () => useDisplay().width.value < 400\n\n</script>\n\n<template>\n    <v-container>\n        <v-row style=\"width: 160px\" class=\"mx-auto\">\n            <v-select single-line density=\"compact\" variant=\"solo\" rounded :items=\"years as string[]\"\n                :disabled=\"loading\" @update:model-value=\"yearLvlChanged($event as string)\" v-model=\"yearLvl\"\n                style=\"text-align: center;\"></v-select>\n        </v-row>\n        <ClientOnly>\n            <v-row v-if=\"!loading\" v-for=\"(p, i) in datas\" no-gutters>\n                <v-row v-if=\"p.member.length === 1\" no-gutters>\n                    <v-col :class=\"'pa-0 ' + (isSmallScreen() ? 'ma-2' : 'ma-5')\">\n                        <Card class=\"mx-auto\" :member=\"/* @ts-ignore */p.member[0]\"></Card>\n                    </v-col>\n                </v-row>\n\n                <v-data-iterator class=\"mx-auto\" v-if=\"p.member.length > 1\" :items=\"p.member\">\n                    <template v-slot:default=\"{ items }\">\n                        <v-row no-gutters>\n                            <v-col :class=\"'pa-0 ' + (isSmallScreen() ? 'ma-2' : 'ma-5')\"\n                                v-for=\"(member, index) in items\" :key=\"index\">\n                                <Card class=\"mx-auto\" :member=\"/* @ts-ignore */member.raw\"></Card>\n                            </v-col>\n                        </v-row>\n                    </template>\n                </v-data-iterator>\n            </v-row>\n            <v-row v-else no-gutters>\n                <v-col v-for=\"(color, k) in loadingColors\">\n                    <v-skeleton-loader :color=\"color\" style=\"border-radius: 10px;\" :elevation=\"12\"\n                        :class=\"'border mx-auto pa-0 ' + (isSmallScreen() ? 'my-2' : 'my-5')\" width=\"320\" height=\"190\"\n                        type=\"list-item-avatar-three-line, paragraph\"></v-skeleton-loader>\n                </v-col>\n            </v-row>\n        </ClientOnly>\n    </v-container>\n</template>\n\n<style lang=\"css\" scoped>\n::v-deep(.v-field__field) {\n    margin-left: 18px;\n}\n\n::v-deep(.v-field__append-inner) {\n    width: 0px;\n}\n\n::v-deep(.v-select .mdi:before, .mdi-set ) {\n    visibility: hidden\n}\n</style>"],"names":["isDefer","dedupe","useAsyncData","args","autoKey","key","_handler","options","nuxtApp","useNuxtApp","handler","getDefault","asyncDataDefaults","getDefaultCachedData","initialCachedData","hasCachedData","_a","_ref","ref","shallowRef","toRef","asyncData","opts","cachedData","promise","resolve","reject","err","_result","result","pick","error","createError","unref","clearNuxtDataByKey","initialFetch","fetchOnServer","instance","getCurrentInstance","cbs","onBeforeMount","cb","onUnmounted","hasScope","getCurrentScope","unsub","watch","onScopeDispose","off","keys","asyncDataPromise","obj","newObj","colorLightenLvl","cardColors","alterColors","ColorAdjustParas","yearLvl","_useModel","__props","fetchDatas","year","loading","loadingColors","randomLoadingColor","sleep","i","res","randomColor","datas","__temp","__restore","_withAsyncContext","years","onMounted","yearLvlChanged","yearL","ms","r","isSmallScreen","useDisplay"],"mappings":"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","x_google_ignoreList":[0]}