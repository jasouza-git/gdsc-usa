{"version":3,"file":"_7Kz8Y36.js","sources":["../../../../node_modules/vuetify/lib/composables/resizeObserver.mjs"],"sourcesContent":["// Utilities\nimport { onBeforeUnmount, readonly, ref, watch } from 'vue';\nimport { templateRef } from \"../util/index.mjs\";\nimport { IN_BROWSER } from \"../util/globals.mjs\"; // Types\nexport function useResizeObserver(callback) {\n  let box = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'content';\n  const resizeRef = templateRef();\n  const contentRect = ref();\n  if (IN_BROWSER) {\n    const observer = new ResizeObserver(entries => {\n      callback?.(entries, observer);\n      if (!entries.length) return;\n      if (box === 'content') {\n        contentRect.value = entries[0].contentRect;\n      } else {\n        contentRect.value = entries[0].target.getBoundingClientRect();\n      }\n    });\n    onBeforeUnmount(() => {\n      observer.disconnect();\n    });\n    watch(() => resizeRef.el, (newValue, oldValue) => {\n      if (oldValue) {\n        observer.unobserve(oldValue);\n        contentRect.value = undefined;\n      }\n      if (newValue) observer.observe(newValue);\n    }, {\n      flush: 'post'\n    });\n  }\n  return {\n    resizeRef,\n    contentRect: readonly(contentRect)\n  };\n}\n//# sourceMappingURL=resizeObserver.mjs.map"],"names":["useResizeObserver","callback","box","resizeRef","templateRef","contentRect","ref","IN_BROWSER","observer","entries","onBeforeUnmount","watch","newValue","oldValue","readonly"],"mappings":"wEAIO,SAASA,EAAkBC,EAAU,CAC1C,IAAIC,EAAM,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,UAC9E,MAAMC,EAAYC,IACZC,EAAcC,IACpB,GAAIC,EAAY,CACd,MAAMC,EAAW,IAAI,eAAeC,GAAW,CAExCA,EAAQ,SACTP,IAAQ,UACVG,EAAY,MAAQI,EAAQ,CAAC,EAAE,YAE/BJ,EAAY,MAAQI,EAAQ,CAAC,EAAE,OAAO,wBAE9C,CAAK,EACDC,EAAgB,IAAM,CACpBF,EAAS,WAAU,CACzB,CAAK,EACDG,EAAM,IAAMR,EAAU,GAAI,CAACS,EAAUC,IAAa,CAC5CA,IACFL,EAAS,UAAUK,CAAQ,EAC3BR,EAAY,MAAQ,QAElBO,GAAUJ,EAAS,QAAQI,CAAQ,CAC7C,EAAO,CACD,MAAO,MACb,CAAK,CACF,CACD,MAAO,CACL,UAAAT,EACA,YAAaW,EAAST,CAAW,CACrC,CACA","x_google_ignoreList":[0]}