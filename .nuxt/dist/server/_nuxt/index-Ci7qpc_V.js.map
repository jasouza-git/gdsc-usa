{"version":3,"file":"index-Ci7qpc_V.js","sources":["../../../../components/Bubble.vue","../../../../components/Bubbles.vue","../../../../virtual:public?%2Ftitle.png","../../../../pages/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\n    const bubble = ref<HTMLDivElement | null>(null);\n    const info = withDefaults(defineProps<{\n        fill?:string,       // Fill of bubble (color or image url)\n        x?:number,          // X Position of bubble\n        y?:number,          // Y Position of bubble\n        z?:number,          // Size of bubble (pixels)\n        f?:number,          // Friction of bubble (0-1)\n        r?:number,          // Randomness of bubble (pixels)\n        m?:number,          // Maxium Velocity (pixels)\n        back?:boolean,      // Background Bubble (does not fights for parent's \"area\")\n    }>(), {\n        fill: 'red',\n        x: 0,\n        y: 0,\n        z: 200,\n        f: 0.25,\n        r: 1,\n        m: 300,\n        back: false,\n    });\n    let scroll = ref({\n        oY: 0,\n        oX: 0,\n        vX: 0,\n        vY: 0,\n        pX: 0,\n        pY: 0,\n        aX: 0,\n        aY: 0,\n        dT: Number(new Date()),\n    });\n    let drag = ref<number[]>([]);\n    let mouse:globalThis.Ref<number[]>|undefined = inject('mouse');\n    let area:globalThis.Ref<number[]>|undefined = inject('area');\n    let focus = ref({\n        n: 0,\n        x: 0,\n        y: 0,\n    })\n\n    function animate() {\n        let dT = Number(new Date());\n        let dt = (dT - scroll.value.dT)/1000;\n        scroll.value.dT = dT;\n        if (bubble.value && dt < 1) {\n            // Bubble is focused\n            if (!info.back && area && area.value[1] > 1) {\n                focus.value.x = Math.cos(focus.value.n*2*Math.PI/area.value[1]+area.value[0])*area.value[2];\n                focus.value.y = Math.sin(focus.value.n*2*Math.PI/area.value[1]+area.value[0])*area.value[2];\n            }\n            // User is dragging Bubble\n            if (drag.value.length && mouse && mouse.value[2] == -1) {\n                scroll.value.pX += mouse.value[0]-drag.value[0];\n                scroll.value.pY += mouse.value[1]-drag.value[1];\n                drag.value = [];\n                bubble.value?.classList.remove('focus');\n            // Animate Bubble Momentum\n            } else if (!drag.value.length) {\n                let dY = (window.scrollY-scroll.value.oY)-scroll.value.aY;\n                let dX = (window.scrollX-scroll.value.oX)-scroll.value.aX;\n                scroll.value.aY += dY;\n                scroll.value.aX += dX;\n                scroll.value.pY += scroll.value.vY*dt;\n                scroll.value.pX += scroll.value.vX*dt;\n                scroll.value.vY = Math.max(Math.min((scroll.value.vY-scroll.value.pY+dY*info.f+info.r*(0.5-Math.random()))*(1-info.f*dt),info.m),-info.m);\n                scroll.value.vX = Math.max(Math.min((scroll.value.vX-scroll.value.pX+dX*info.f+info.r*(0.5-Math.random()))*(1-info.f*dt),info.m),-info.m);\n            }\n            // Apply Bubble position\n            bubble.value.style.transform = `translate(calc(-50% + ${\n                drag.value.length && mouse && mouse.value[2] != -1 ? scroll.value.pX+mouse.value[0]-drag.value[0] : scroll.value.pX\n            }px + ${focus.value.x+info.x}vw), calc(-50% + ${\n                drag.value.length && mouse && mouse.value[3] != -1 ? scroll.value.pY+mouse.value[1]-drag.value[1] : scroll.value.pY\n            }px + ${focus.value.y+info.y}vw))`;\n        }\n        requestAnimationFrame(animate);\n    }\n    onMounted(() => {\n        if (!bubble.value) return;\n        if (['red','yellow','green','blue'].includes(info.fill)) bubble.value.classList.add(info.fill);\n        else {\n            bubble.value.style.backgroundImage = `url(${info.fill})`;\n        }\n        bubble.value.style.width = `${info.z}px`;\n        bubble.value.style.height = `${info.z}px`;\n        scroll.value.oY = bubble.value.getBoundingClientRect().top;\n        scroll.value.aY = window.scrollY-scroll.value.oY;\n        scroll.value.oX = bubble.value.getBoundingClientRect().left;\n        scroll.value.aX = window.scrollX-scroll.value.oX;\n        if (!info.back && area) {\n            focus.value.n = area.value[1];\n            area.value[1]++;\n        }\n        bubble.value.addEventListener('mousedown', e => {\n            drag.value = [e.clientX, e.clientY];\n            bubble.value?.classList.add('focus');\n        });\n        animate();\n    });\n</script>\n<style lang=\"sass\">\n    .bubble\n        position: absolute\n        display: inline-block\n        border-radius: 50%\n        transform: translate(-50%, -50%)\n        box-shadow: 0 0 5px #12181ADD\n        background-size: cover\n        background-position: center\n        &.red\n            background-color: #EA4335\n        &.yellow\n            background-color: #FBBC04\n        &.green\n            background-color: #34A853\n        &.blue\n            background-color: #4285F4\n        &.focus\n            z-index: 1\n</style>\n<template>\n    <div class=\"bubble\" ref=\"bubble\">\n    </div>\n</template>","<script setup lang=\"ts\">\n    type Color = \"red\" | \"yellow\" | \"green\" | \"blue\";\n    const info = withDefaults(defineProps<{\n        amount?:number,                                 // Number of Bubbles\n        colors?:Color[],                                // Color classes\n        imgOff?:number,                                 // Image Offset\n        bubOff?:number,                                 // Bubble Offset\n        durVar?:number,                                 // Transition Variety (miliseconds)\n        durOff?:number,                                 // Transition Offset (miliseconds)\n    }>(), {\n        amount: 15,\n        // @ts-ignore - A ts-bug\n        colors:['red','yellow','green','blue'],\n        imgOff: 5,\n        bubOff: 20,\n        durVar: 500,\n        durOff: 250,\n    });\n    let area = ref<number[]>([Math.random()*Math.PI, 0, info.imgOff]); // Random Angle Offset, Number of focused bubbles\n    provide('area', area);\n    let observer:IntersectionObserver|null = null;\n    let bubbles = ref<HTMLDivElement|null>(null);\n    onMounted(() => {\n        if (!bubbles.value) return;\n        observer = new IntersectionObserver(entries => entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                entry.target.classList.remove('hidden');\n                setTimeout(() => {\n                    entry.target.classList.remove('a500');\n                    entry.target.classList.add('a300');\n                    setTimeout(() => {\n                        entry.target.classList.remove('a300');\n                        entry.target.classList.add('a100');\n                        setTimeout(() => {\n                            entry.target.classList.remove('a100');\n                            entry.target.classList.add('a050');\n                            setTimeout(() => entry.target.classList.remove('a050'), 50);\n                        }, 50);\n                    }, 200);\n                }, 200);\n                observer?.disconnect();\n            };\n        }), {\n            root: null,\n            rootMargin: '0px',\n            threshold: 1\n        });\n        observer.observe(bubbles.value);\n    });\n</script>\n<style lang=\"sass\">\n    .bubbles\n        position: relative\n        width: 100%\n        height: 100%\n        *\n            left: 50%\n            top: 50%\n        &.hidden *\n            width: 0!important\n            height: 0!important\n            transform: translate(-50%, -50%)!important\n        // I cant find a way to elliminate linear animation\n        // on dynamic positioning, so brute force it is\n        &.a500 *\n            transition: .5s\n        &.a300 *\n            transition: .3s\n        &.a100 *\n            transition: .1s\n        &.a050 *\n            transition: .05s\n</style>\n<template>\n    <div class=\"bubbles hidden a500\" ref=\"bubbles\">\n        <!-- (Math.pow(2*Math.random()-1,2)/2+0.5)*20-10 -->\n        <Bubble v-for=\"n in info.amount\" \n            :fill=\"info.colors[Math.floor(Math.random()*info.colors.length)]\"\n            :x=\"Math.random()*info.bubOff-info.bubOff/2\"\n            :y=\"Math.random()*info.bubOff-info.bubOff/2\"\n            :z=\"Math.round(Math.random()*75)+25\"\n            :f=\"n/info.amount/4\"\n            back\n        />\n        <slot></slot>\n    </div>\n</template>","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/title.png\")","<script setup lang=\"ts\">\nimport { useDisplay } from 'vuetify';\n\nconst formRegister = (value: any) => {\n    console.log(value)\n}\n\nconst decideFormWidth = () => {\n    const w = useDisplay().width.value\n    return w < 430 ? 340 :\n        useDisplay().smAndDown.value ? 420 : 500\n}\n\n// get the random number using \"useAsyncData\" function, ensure the data gathered at server side.\n// avoid \"Hydration node mismatch\" warning\nconst { data: randomNums } = await useAsyncData(\"randomNums\", async () => [1, 2, 3, 4, 5].map(i => Math.random()))\n\nconst year = ref('2023 - 2024')\n\nwatch(randomNums, () => {\n    console.log(randomNums)\n})\n\n</script>\n\n<template>\n    <Block dark img=\"group_photo.png\">\n        <v-container fluid style=\"height: 100vh;\">\n            <v-row class=\"fill-height px-8\" align=\"center\" justify=\"center\">\n                <v-col>\n                    <h6>01 - GDSC</h6>\n                    <h1>Google Developer Student Clubs</h1>\n                    <h3>University of San Agustin</h3>\n                </v-col>\n            </v-row>\n        </v-container>\n    </Block>\n    <Block dark icon>\n        <!-- use ClientOnly to avoid \"Hydration node mismatch\" warning -->\n        <ClientOnly>\n            <v-container fluid style=\"height: 100vh;\" :min-height=\"$vuetify.display.smAndDown ? '400px' : '800px'\">\n                <v-row class=\"fill-height px-8\" align=\"center\" justify=\"center\">\n                    <div style=\"height: 50px\"></div>\n                    <v-row>\n                        <v-col>\n                            <h3>02 - About GDSC USA</h3>\n                            <p>GDSC USA is a community group for Augustinian students interested in growing their\n                                technical\n                                knowledge and applying it to real life situations to create solutions for local\n                                businesses and\n                                their\n                                community.</p>\n                        </v-col>\n                        <v-col v-if=\"!$vuetify.display.smAndDown\">\n                            <Bubbles>\n                                <Bubble fill=\"/pop00.png\" />\n                            </Bubbles>\n                        </v-col>\n                    </v-row>\n                    <v-row>\n                        <v-col v-if=\"!$vuetify.display.smAndDown\">\n                            <Bubbles>\n                                <Bubble fill=\"/pop02.png\" />\n                                <Bubble fill=\"/pop01.png\" />\n                            </Bubbles>\n                        </v-col>\n                        <v-col>\n                            <h3>03 - What We Do</h3>\n                            <p>As a program supported by Google Developers, students from all courses and year levels\n                                can join\n                                GDSC\n                                USA. We arrange webinars, hold workshops, and engage in community building to help\n                                kickstart\n                                careers!</p>\n                        </v-col>\n                    </v-row>\n                    <div style=\"height: 50px\"></div>\n                </v-row>\n            </v-container>\n        </ClientOnly>\n    </Block>\n    <Block icon>\n        <v-container fluid style=\"height: 100vh;\" min-height=\"500px\">\n            <v-row class=\"fill-height py-10 px-8\" align=\"center\" justify=\"center\">\n                <v-col>\n                    <h2>04 - GDSC Event Gallery</h2>\n                    <p class=\"mb-4\">We arrange webinars, hold workshops, and engage in community building to help\n                        kickstart careers!\n                    </p>\n                    <v-row align=\"center\" justify=\"center\" v-for=\"(n, i) of randomNums\" :key=\"i\">\n                        <input :value=\"n\"></input>\n                    </v-row>\n                    <Slider />\n                </v-col>\n            </v-row>\n        </v-container>\n    </Block>\n    <Block dark icon>\n        <v-container fluid min-height=\"500px\">\n            <v-row class=\"fill-height py-10\" align=\"center\" justify=\"center\">\n                <v-col>\n                    <v-row class=\"mt-8 mb-10\">\n                        <h2 class=\"mx-auto\">Meet Our Team!</h2>\n                    </v-row>\n                    <v-row>\n                        <Deck v-model:yearLvl=\"year\"></Deck>\n                    </v-row>\n                </v-col>\n            </v-row>\n            <div style=\"height: 50px\"></div>\n        </v-container>\n    </Block>\n    <Block icon>\n        <v-container fluid min-height=\"500px\">\n            <div style=\"height: 50px\"></div>\n            <ClientOnly>\n                <v-row class=\"mb-8\">\n                    <img class=\"mx-auto\" src=\"/title.png\" :width=\"decideFormWidth() / 2\" />\n                </v-row>\n            </ClientOnly>\n            <v-row class=\"mb-8\">\n                <h3 class=\"mx-auto\">Be Part of the Community!</h3>\n            </v-row>\n            <v-row>\n                <!-- use ClientOnly to avoid \"Hydration node mismatch\" warning -->\n                <ClientOnly>\n                    <v-col class=\"mx-auto\" v-if=\"!$vuetify.display.smAndDown\">\n                        <Bubbles>\n                            <Bubble fill=\"/pop02.png\" />\n                            <Bubble fill=\"/pop02.png\" />\n                        </Bubbles>\n                    </v-col>\n                    <v-col>\n                        <h5 class=\"mb-2 mx-auto\">Membership</h5>\n                        <Form :width=\"decideFormWidth()\" @submit=\"formRegister\" class=\"mx-auto\"></Form>\n                    </v-col>\n                </ClientOnly>\n            </v-row>\n            <div style=\"height: 70px\"></div>\n        </v-container>\n    </Block>\n</template>"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACU,UAAA,SAAS,IAA2B,IAAI;AAoBjC,QAAI;AAAA,MACb,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI,OAAW,oBAAA,MAAM;AAAA,IAAA,CACxB;AACU,QAAc,CAAA,CAAE;AACoB,WAAO,OAAO;AACf,WAAO,MAAM;AAC/C,QAAI;AAAA,MACZ,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IAAA,CACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCD,UAAM,OAAO;AAgBT,QAAA,OAAO,IAAc,CAAC,KAAK,OAAS,IAAA,KAAK,IAAI,GAAG,KAAK,MAAM,CAAC;AAChE,YAAQ,QAAQ,IAAI;AAEhB,QAAA,UAAU,IAAyB,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBQ,MAAe,aAAA,gBAAgB,YAAY;;;;;;ACG5F,UAAA,eAAe,CAAC,UAAe;AACjC,cAAQ,IAAI,KAAK;AAAA,IAAA;AAGrB,UAAM,kBAAkB,MAAM;AACpB,YAAA,IAAI,aAAa,MAAM;AAC7B,aAAO,IAAI,MAAM,MACb,WAAa,EAAA,UAAU,QAAQ,MAAM;AAAA,IAAA;AAK7C,UAAM,EAAE,MAAM,WAAW,KAAI,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM,aAAa,cAAc,YAAY,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAA,MAAK,KAAK,OAAQ,CAAA,CAAC,CAAA;AAE3G,UAAA,OAAO,IAAI,aAAa;AAE9B,UAAM,YAAY,MAAM;AACpB,cAAQ,IAAI,UAAU;AAAA,IAAA,CACz}